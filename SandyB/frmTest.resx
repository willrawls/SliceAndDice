<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Image1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAADnSURBVDhPlZGxEYMwDEVdULhgG+/kOTJCWo+QIjvQQ0/F
        EEzg6OkizhgSDHf/ELb/+5JxD+eyKVYKJ+r7PnvvVV3X5UvAlKQOjYAagiFPNwCkGSRFkRgBTFKzF76g
        vwAOU1uyAlgXZSCyZ10cAJooh0jXxAJU1uUYLhUABICDwBjFTNZNfQ8HACMAsYvEZGLvEmCKIcgYKY/j
        KO+4jXEJ0GQxr+uqmuc587DWBEAkY8aEbgNoexiGrZsagJo6SGJ6v54KSDHuANbFKQAjAHuWZdGOfgJq
        iP1CQHoPfFcjNAFMpXEP8PkD3tOxb9tPv5cAAAAASUVORK5CYII=
</value>
  </data>
</root>